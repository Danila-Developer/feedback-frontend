import {userRegistration as userRegistrationAPI} from 'modules/header/API/userRegistration'
import {userLogin as userLoginAPI} from 'modules/header/API/userLogin'
import {LOGOUT_USER, LOGIN_USER} from 'modules/header/store/user_store/action'
import { getAddAlertAction } from 'modules/alert'

export function getLoginUserAction(token, firstName, lastName) {
    return {type: LOGIN_USER, payload: {token, firstName, lastName}}
}

export function getLogoutUserAction() {
    return {type: LOGOUT_USER}
}

export function getRegistrationUserAction({firstName, lastName, email, password1, password2}) {
    return async dispatch => {
        try {
            const user = await userRegistrationAPI({firstName, lastName, email, password1, password2})
            dispatch(getLoginUserAction(user.token, user.firstName, user.lastName))
        } catch (e) {
            console.log(e.response.data)
            e.response.data.forEach(err => {
                dispatch(getAddAlertAction('error', err.errors[0]))
            })
        }
    }
}

export function getAuthorizationUserAction({email, password}) {
    return async dispatch => {
        try {
            const user = await userLoginAPI({email, password})
            dispatch(getLoginUserAction(user.token, user.firstName, user.lastName))
        } catch (e) {
            dispatch(getAddAlertAction('error', e.response.data.message))
        }
    }
}