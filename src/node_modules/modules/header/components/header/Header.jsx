import React, {useState} from 'react';
import classes from 'modules/header/components/header/Header.module.css'
import AuthModal from 'modules/header/components/auth_modal/AuthModal'
import {useDispatch, useSelector} from "react-redux";
import {getAuthModalOnAction} from 'modules/header/store/auth_modal_store/actionCreator'
import {CSSTransition} from "react-transition-group";
import {getLogoutUserAction} from 'modules/header/store/user_store/actionCreator'
import modalClasses from '../auth_modal/AuthModal.module.css'


const routes = [{name: 'Главная', to: '/'},
                {name: 'Контакты', to: '/contacts'},
                {name: 'Правила', to: ''},
                {name: 'Черный список', to: ''}
]


const Header = () => {
    const user = useSelector(state => state.user)
    const authModalVisible = useSelector(state => state.authModal)
    const dispatch = useDispatch()
    const [visibleUserMenu, setVisibleUserMenu] = useState(false)

    const visibleUserMenuHandler = () => {
        setVisibleUserMenu(true)
        setTimeout(() => {
            document.addEventListener('click', () => setVisibleUserMenu(false), {once: true})
        }, 1)
    }

    return (
        <header className={classes.header}>
            <div className="container">
                <nav className={classes.headerNav}>
                    <ul className={classes.navUl}>
                        {
                            routes.map(route =>
                                <li className={classes.navLi}><a className={classes.navLink} data-hover={route.name}>{route.name}</a></li>
                            )
                        }
                    </ul>
                    <div className={classes.headerUser}>
                        {
                            user.token === null ?
                                <span
                                    onClick={() => dispatch(getAuthModalOnAction())}
                                    className={[classes.user, classes.navLink].join(' ')}
                                    data-hover='Войти'
                                >Войти</span> :
                                <span className={[classes.user, classes.loginUser].join(' ')}>
                                    <span
                                        className={classes.userSpan}
                                        onClick={visibleUserMenuHandler}
                                    >{user.firstName} {user.lastName}</span>
                                    <CSSTransition
                                        in={visibleUserMenu}
                                        timeout={300}
                                        mountOnEnter
                                        unmountOnExit
                                        classNames={{
                                            enterActive: classes.userMenuEnterActive,
                                            enterDone: classes.userMenuEnterDone
                                        }}
                                    >
                                        <ul className={classes.userMenu}>
                                            <li>Личный кабинет</li>
                                            <li onClick={() => dispatch(getLogoutUserAction())}>Выход</li>
                                        </ul>
                                    </CSSTransition>
                                </span>
                        }
                    </div>
                </nav>
            </div>
            <div className={classes.headerBottom}>
                <div className="container">
                    <div className={classes.headerBottomWrapper}>
                        <img src={process.env.PUBLIC_URL + 'logo.svg'} alt="" className={classes.headerBottomLogo} />
                    </div>
                </div>
            </div>
            <CSSTransition
                in={authModalVisible}
                timeout={300}
                mountOnEnter
                unmountOnExit
                classNames={{
                    enter: modalClasses.authModalEnter,
                    enterDone: modalClasses.authModalEnterDone,
                    exitActive: modalClasses.authModalExitActive,
                    exitDone: modalClasses.authModalExitDone
                }}
            >
                <AuthModal />
            </CSSTransition>

        </header>
    );
};

export default Header;